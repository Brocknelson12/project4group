package tryCodes;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Controller {
	private InputWindowsView input;
	
	
	public void setView(InputWindowsView view){
		input = view;
		
		input.addMovieActionListener(new AddMovieListener());
		input.addLoadFilesActionListener(new LoadFilesListener());
		input.addImportActionListener(new ImportFilesListener());
		input.addSaveActionListener(new SaveFileListener());
		input.addExportActionListener(new ExportFileListener());
	}
	
	
	private class LoadFilesListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e){
			input.filesChooser.setMultiSelectionEnabled(true);
			FileNameExtensionFilter filter = new FileNameExtensionFilter("OBJECT I/O FIELS", "text", "text");
			input.filesChooser.setFileFilter(filter);
			input.filesChooser.showOpenDialog(input.load);
			input.filesChooser.getSelectedFile();
			//TODO model load I/O Object files 

		}
	}
	
	private class SaveFileListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e){
			input.filesChooser.showSaveDialog(null);
			//TODO save binary files
		}
	}
	
	private class ExportFileListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e){
			input.filesChooser.showSaveDialog(null);
			//TODO export txt files
			
		}
	}
	
	
	private class ImportFilesListener implements ActionListener{
		@Override 
		public void actionPerformed(ActionEvent e){
			String[] choose = {"Movie", "Series", "Episode", "Actor", "Director", "Producer"};
			String fileType = (String)JOptionPane.showInputDialog(null, "Choose file type...", 
					"Choose what type files you want to import", JOptionPane.QUESTION_MESSAGE, null
					,choose, choose[0]);
			if(fileType != null){ 
				input.filesChooser.showOpenDialog(input);
				//TODO  import files
			}
		}
	}
	
	
	
	private class AddMovieListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent event) {
			String title = input.movieTitleField.getText();
			String year = "";
			String ronNum = "";
			String venue = "";
			
			year = input.movieYearField.getText();
			if(input.movieYearField.getText().isEmpty()){
				year = "????";
				System.out.println(year);
			}
			ronNum = input.ronNumField.getText();
			venue = input.venueField.getText();
			
			//clean the field after add into model 
			input.movieTitleField.setText(null);
			input.movieYearField.setText(null);
			input.ronNumField.setText(null);
			input.venueField.setText(null);
			JOptionPane.showMessageDialog(null, "Add successful.");
			
			//TODO add into model	
			
		}
	}
	
	private class AddSeriesListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent event) {
			String title = input.seriesTitleField.getText();
			String startYear = "";
			String endYear = "";
			
			startYear = input.seriesStartYearField.getText();
			if(input.seriesStartYearField.getText().isEmpty()){
				startYear = "????";
				System.out.println("Series added");//test
			}
			endYear = input.seriesEndYearField.getText();
			if(input.seriesEndYearField.getText().isEmpty()){
				endYear = "????";
			}
			
			//clean the field after add into model 
			input.seriesTitleField.setText(null);
			input.seriesStartYearField.setText(null);
			input.seriesEndYearField.setText(null);
			JOptionPane.showMessageDialog(null, "Add successful.");
			
			//TODO add into model	
			
		}
	}
	
	
	
	private class AddEpisodeListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent event) {
			String title = input.episodeTitleField.getText();
			String episodeTitle = input.episodeTitleField.getText();
			String startYear = "";
			String endYear = "";
			String episodeNum = input.episodeNumField.getText();
			
			startYear = input.episodeStartYearField.getText();
			if(input.episodeStartYearField.getText().isEmpty()){
				startYear = "????";
				System.out.println("Series added");//test
			}
			endYear = input.episodeEndYearField.getText();
			if(input.episodeEndYearField.getText().isEmpty()){
				endYear = "????";
			}
			
			
			//clean the field after add into model 
			input.episodeTitleField.setText(null);
			input.episodeTitleField.setText(null);
			input.episodeStartYearField.setText(null);
			input.episodeEndYearField.setText(null);
			input.episodeNumField.setText(null);
			JOptionPane.showMessageDialog(null, "Add successful.");
			
			//TODO add into model	
			
		}
	}
}
