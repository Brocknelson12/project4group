package tryCodes;



import java.awt.BorderLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Label;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;

public class InputWindowsView extends JFrame{
	public String selectCommand;
	//selection
	public JRadioButton mediaButton = new JRadioButton("Media");
	public JRadioButton movieButton = new JRadioButton("Movie");
	public JRadioButton seriesButton = new JRadioButton("Series");
	public JRadioButton episodeButton = new JRadioButton("Episode");
	public JRadioButton makersButton = new JRadioButton("Makers");
	public JRadioButton actorsButton = new JRadioButton("Actors");
	public JRadioButton directorsButton = new JRadioButton("Directors");
	public JRadioButton producersButton = new JRadioButton("Producers");
	public ArrayList<JRadioButton> buttonList = new ArrayList<JRadioButton>();
	
	public ButtonGroup buttons = new ButtonGroup();
	
	//file chooser
	public JFileChooser filesChooser = new JFileChooser();
	
	//ouputArea
	public JLabel outputLabel = new JLabel("Output Title");
	public JTextArea outputArea = new JTextArea(20, 50);
	
	
	//File Menu
	public JMenu fileMenu = new JMenu("File");
	public JMenuItem load = new JMenuItem("Load");
	public JMenuItem save = new JMenuItem("Save");
	public JMenuItem importItem = new JMenuItem("Import");
	public JMenuItem export = new JMenuItem("Export");
	
	//Edit Menu
	public JMenu editMenu = new JMenu("Edit");
	public JMenuItem add = new JMenuItem("Add");
	public JMenuItem edit = new JMenuItem("Edit");
	public JMenuItem delete = new JMenuItem("Delete");
	public JMenuItem clear = new JMenuItem("Clear");
	public JMenuItem clearAll = new JMenuItem("Clear All");
	
	//Display Menu
	public JMenu displayMenu = new JMenu("Display");
	public JMenuItem pieChart = new JMenuItem("Pie Chart");
	public JMenuItem histogram = new JMenuItem("Histogram");
	public JMenuBar menuBar = new JMenuBar();
	
	//list of frame
	ArrayList<JFrame> frameList = new ArrayList<JFrame>(); 
	
	//Enter movie View Compoenents
	public JTextField movieTitleField;
	public JTextField movieYearField;
	public JTextField ronNumField;
	public JTextField venueField;
	public JButton addMovieButton = new JButton("ADD");
	
	//Enter Series view compoenets
	public JTextField seriesTitleField;
	public JTextField seriesStartYearField;
	public JTextField seriesEndYearField;
	public JButton addSeriesButton = new JButton("ADD");
	
	
	//Enter Episode view compoenets
	public JTextField episodeSeriesTitleField;
	public JTextField episodeStartYearField;
	public JTextField episodeEndYearField;
	public JTextField episodeTitleField;
	public JTextField episodeNumField;
	public JButton addEpisodeButton = new JButton("ADD");
	
	//Enter Actor view components
	public JTextField actorNameField;
	public JTextField actorTitleField;
	public JTextField actorYearField;
	public JTextField actorEpisodeTitleField;
	public JTextField actorEpisodeNumberField;
	public JTextField actorTypeField;
	public JTextField actorRoleField;
	public JTextField actorArchiveFootageField;
	public JTextField actorCreditField;
	public JTextField actorCharNameField;
	public JTextField actorBillingOrderField;
	JButton addActorButton = new JButton("Add");
	
	//Enter director view components
	public JTextField directorNameField;
	public JTextField directorTitleField;
	public JTextField directorYearField;
	public JTextField directorEpisodeTitleField;
	public JTextField directorEpisodeNumberField;
	public JTextField directorTypeField;
	public JTextField directorCreditField;
	JButton addDirectorButton = new JButton("Add");
	
	//Enter Producer view Components
	public JTextField producerNameField;
	public JTextField producerTitleField;
	public JTextField producerYearField;
	public JTextField producerEpisodeTitleField;
	public JTextField producerEpisodeNumberField;
	public JTextField producerTypeField;
	public JTextField producerCreditField;
	public JTextField producerRoleField;
	JButton addProducerButton = new JButton("Add");
	
	
	
	//frames
	JFrame movieFrame = new JFrame();
	JFrame seriesFrame = new JFrame();
	JFrame episodeFrame = new JFrame();
	JFrame actorFrame = new JFrame();
	JFrame directorFrame = new JFrame();
	JFrame producerFrame = new JFrame();
	
	public InputWindowsView(){

		addMovieFrame(movieFrame);
		addSeriesFrame(seriesFrame);
		addEpisodeFrame(episodeFrame);
		addActorFrame(actorFrame);
		addDirectorFrame(directorFrame);
		addProducerFrame(producerFrame);
		
		setTitle("MDb");
		setLayout(new BorderLayout());
		addSeletActionListener(new SelectListener());
		
		
		load.setToolTipText("Read files which in using object I/O. ");
		fileMenu.add(load);
		
		save.setToolTipText("Output data files using object I/O.");
		save.setEnabled(false);
		fileMenu.add(save);
	
		importItem.setToolTipText("Read data from text files.(It will be active after select radio button)");
		importItem.addActionListener(new SaveFilesListener());
		fileMenu.add(importItem);
		
		export.setEnabled(false);
		export.setToolTipText("Export data as text files.");
		fileMenu.add(export);
		menuBar.add(fileMenu);
		
		add.setToolTipText("It will active when you select which types of data you want to add.");
		add.setEnabled(false);
		add.addActionListener(new AddDataListener());
		editMenu.add(add);
		
		edit.setEnabled(false);
		edit.setToolTipText("Edit the exist data, it will be inative onece data loaded, imported or add.");
		
		delete.setEnabled(false);
		delete.setToolTipText("Delet the exist related object and data from system, "
				+ "it will be inative onece data loaded, imported or added.");
		
		clear.setEnabled(false);
		clear.setToolTipText("Clean the exist related objects from system,"
				+ " it will be inative onece data loaded, imported or added.");
		
		clearAll.setToolTipText("Clean all the exist objects. "
				+ "it will be inative onece data loaded, imported or added.");
		clearAll.setEnabled(false);
		
		
		editMenu.add(edit);
		editMenu.add(delete);
		editMenu.add(clear);
		editMenu.add(clearAll);
		menuBar.add(editMenu);
		
		menuBar.add(displayMenu);
		displayMenu.add(pieChart);
		displayMenu.add(histogram);
		add(menuBar, BorderLayout.PAGE_START);
		
		JPanel jplButtons = new JPanel(new GridLayout(9, 0, 5, 30));
		JLabel seletLabel = new JLabel("    Seletion");
		jplButtons.add(seletLabel);
		
		mediaButton.setToolTipText("Cannot be import or add");
		makersButton.setToolTipText("Cannot be import or add");
		
		mediaButton.setActionCommand("Media");
		movieButton.setActionCommand("Movie");
		seriesButton.setActionCommand("Series");
		episodeButton.setActionCommand("Episode");
		makersButton.setActionCommand("Makers");
		actorsButton.setActionCommand("Actors");
		directorsButton.setActionCommand("Directors");
		producersButton.setActionCommand("Producers");
		
		buttonList.add(mediaButton);
		buttonList.add(movieButton);
		buttonList.add(seriesButton);
		buttonList.add(episodeButton);
		buttonList.add(makersButton);
		buttonList.add(actorsButton);
		buttonList.add(directorsButton);
		buttonList.add(producersButton);
		
		
		jplButtons.add(mediaButton);
		jplButtons.add(movieButton);
		jplButtons.add(seriesButton);
		jplButtons.add(episodeButton);
		jplButtons.add(makersButton);
		jplButtons.add(actorsButton);
		jplButtons.add(directorsButton);
		jplButtons.add(producersButton);
		
		JScrollPane buttonScroll = new JScrollPane(jplButtons);
		add(buttonScroll, BorderLayout.LINE_START);
		
		JPanel jplOutput = new JPanel(new GridBagLayout());
		GridBagConstraints layoutConst = new GridBagConstraints();
		layoutConst.gridx = 0;
		layoutConst.gridy = 0;
		layoutConst.anchor = GridBagConstraints.CENTER;
		
		jplOutput.add(outputLabel, layoutConst);
		
		
		JScrollPane outputScroll = new JScrollPane(outputArea);
		layoutConst = new GridBagConstraints();
		layoutConst.gridx = 0;
		layoutConst.gridy = 1;
		layoutConst.fill = GridBagConstraints.BOTH;
		layoutConst.weightx = 1.0;
		layoutConst.weighty = 1.0;
		layoutConst.anchor = GridBagConstraints.CENTER;
		jplOutput.add(outputScroll, layoutConst);
		add(jplOutput, BorderLayout.CENTER);
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setVisible(true);
		pack();
	}
	

	
	
	private class SaveFilesListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e){
			//TODO Ouput Object I/O files
		}
	}
	
	private class CancelListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e){
			if(e.getActionCommand().equals("movie")) frameList.get(0).dispose();
			if(e.getActionCommand().equals("series")) frameList.get(1).dispose();
			if(e.getActionCommand().equals("episode")) frameList.get(2).dispose();
			if(e.getActionCommand().equals("actor")) frameList.get(3).dispose();
			if(e.getActionCommand().equals("director")) frameList.get(4).dispose();
			if(e.getActionCommand().equals("producer")) frameList.get(5).dispose();
		}
	}
	
	private class AddDataListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e){
			int i = 0;
			for(JRadioButton b : buttonList){
				if(b.isSelected()){
					if(i >= 5){
						frameList.get(i - 2).setVisible(true);
					}
					else{
						frameList.get(i - 1).setVisible(true);
					}
				}
				i++;
			}

		}
	}
	
	
	private class SelectListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent event) {
			String title = "";
			int i = 0;
			for(JRadioButton b : buttonList){
				if(b.isSelected()){
					title = title + b.getActionCommand() + ", ";
					i++;
				}
			}
			if(title.contains(",")) title = title.substring(0, title.length() - 2);
			if(i == 0) title = "Output Titile";
			outputLabel.setText(title);
			
			
			if((!mediaButton.isSelected() && !makersButton.isSelected()) && i > 0){
				add.setEnabled(true);
			}
			else{
				add.setEnabled(false);
			}
		}
	}
	
	public void addSeletActionListener(ActionListener e){
		mediaButton.addActionListener(e);
		movieButton.addActionListener(e);
		seriesButton.addActionListener(e);
		episodeButton.addActionListener(e);
		makersButton.addActionListener(e);
		actorsButton.addActionListener(e);
		directorsButton.addActionListener(e);
		producersButton.addActionListener(e);
	}
	
	public void addAddMovieActionListener(ActionListener e){
		addMovieButton.addActionListener(e);
	}
	
	public void addAddSeriesActionListener(ActionListener e){
		addSeriesButton.addActionListener(e);
	}
	
	public void addAddEpisodeActionListener(ActionListener e){
		addEpisodeButton.addActionListener(e);
	}
	
	public void addAddActorActionListener(ActionListener e){
		addActorButton.addActionListener(e);
	}
	
	public void addAddDirectorActionListener(ActionListener e){
		addDirectorButton.addActionListener(e);
	}
	
	public void addAddProducerActionListener(ActionListener e){
		addProducerButton.addActionListener(e);
	}
	
	
	public void addLoadFilesActionListener(ActionListener e){
		load.addActionListener(e);
	}
	
	public void addSaveActionListener(ActionListener e){
		save.addActionListener(e);
	}
	
	public void addImportActionListener(ActionListener e){
		importItem.addActionListener(e);
	}
	
	public void addExportActionListener(ActionListener e){
		export.addActionListener(e);
	}
	
	
	public void addEditActionListener(ActionListener e){
		edit.addActionListener(e);
	}
	
	public void addDeleteActionListener(ActionListener e){
		delete.addActionListener(e);
	}
	
	public void addClearActionListener(ActionListener e){
		clear.addActionListener(e);
	}
	
	public void addClearAllActionListener(ActionListener e){
		clearAll.addActionListener(e);
	}
	
	public void addPieChartActionListener(ActionListener e){
		pieChart.addActionListener(e);
	}
	
	public void addhistogramActionListener(ActionListener e){
		histogram.addActionListener(e);
	}
	
	
	private void addMovieFrame(JFrame frame){
		frame = new JFrame("Add movie");
		JButton noButton = new JButton("CANCEL");
		noButton.setActionCommand("movie");
		noButton.addActionListener(new CancelListener());
		
		JPanel jplEnter = new JPanel(new GridLayout(5, 0, 5, 10));
		JLabel titleLabel = new JLabel("Title: ", JLabel.RIGHT);
		movieTitleField = new JTextField(20);
		jplEnter.add(titleLabel);
		jplEnter.add(movieTitleField);
		
		JLabel yearLabel = new JLabel("Year: ", JLabel.RIGHT);
		movieYearField = new JTextField(20);
		jplEnter.add(yearLabel);
		jplEnter.add(movieYearField);
		
		JLabel venueLabel = new JLabel("venue: ", JLabel.RIGHT);
		venueField = new JTextField(20);
		jplEnter.add(venueLabel);
		jplEnter.add(venueField);
		
		JLabel ronManlabel = new JLabel("Roman Number: ", JLabel.RIGHT);
		ronNumField = new JTextField(20);
		jplEnter.add(ronManlabel);
		jplEnter.add(ronNumField);
		
		jplEnter.add(addMovieButton);
		jplEnter.add(noButton);
		frame.add(jplEnter);
		frame.setResizable(false);
		frame.pack();
		
		frameList.add(frame);
	}
	
	private void addSeriesFrame (JFrame frame){
		JButton noButton = new JButton("CANCEL");
		noButton.setActionCommand("series");
		noButton.addActionListener(new CancelListener());
		
		frame = new JFrame("Add Series");
		JLabel titleLabel = new JLabel("Series Title: ", JLabel.RIGHT);
		JLabel startYearLabel = new JLabel("Start Year: ", JLabel.RIGHT);
		JLabel endYearLabel = new JLabel("End Year: ", JLabel.RIGHT);
		
		JPanel jplEnter = new JPanel(new GridLayout(4, 0, 5, 10));
		seriesTitleField = new JTextField(20);
		jplEnter.add(titleLabel);
		jplEnter.add(seriesTitleField);
		
		seriesStartYearField = new JTextField(20);
		jplEnter.add(startYearLabel);
		jplEnter.add(seriesStartYearField);
		
		seriesEndYearField = new JTextField(20);
		jplEnter.add(endYearLabel);
		jplEnter.add(seriesEndYearField);
		
		jplEnter.add(addSeriesButton);
		jplEnter.add(noButton);
		
		frame.add(jplEnter);
		frame.setResizable(false);
		frame.pack();
		frameList.add(frame);
	}
	
	private void addEpisodeFrame(JFrame frame){
		JButton noButton = new JButton("CANCEL");
		noButton.addActionListener(new CancelListener());
		noButton.setActionCommand("episode");
		
		frame = new JFrame("Add Episode");
		
		JPanel jplEnter = new JPanel(new GridLayout(6, 0, 5, 10));
		JLabel seriesTitleLabel = new JLabel("Series Title: ", JLabel.RIGHT);
		episodeSeriesTitleField = new JTextField(20);
		jplEnter.add(seriesTitleLabel);
		jplEnter.add(episodeSeriesTitleField);
		
		JLabel episodeTitleabel = new JLabel("Episode Title: ", JLabel.RIGHT);
		episodeTitleField = new JTextField(20);
		jplEnter.add(episodeTitleabel);
		jplEnter.add(episodeTitleField);
		
		JLabel startYearLabel = new JLabel("Start Year: ", JLabel.RIGHT);
		episodeStartYearField = new JTextField(20);
		jplEnter.add(startYearLabel);
		jplEnter.add(episodeStartYearField);
		
		JLabel endYearLabel = new JLabel("End Year: ", JLabel.RIGHT);
		episodeEndYearField = new JTextField(20);
		jplEnter.add(endYearLabel);
		jplEnter.add(episodeEndYearField);
		
		JLabel episodeLabel = new JLabel("Episode Number: ", JLabel.RIGHT);
		episodeNumField = new JTextField(20);
		jplEnter.add(episodeLabel);
		jplEnter.add(episodeNumField);
		
		jplEnter.add(addEpisodeButton);
		jplEnter.add(noButton);
		frame.add(jplEnter);
		frame.setResizable(true);
		frame.pack();
		frameList.add(frame);
	}
	
	private void addActorFrame(JFrame frame){
		frame = new JFrame("Add Actor");
		
		JPanel jplEnter = new JPanel(new GridLayout(12, 0, 5, 5));
		
		JButton noButton = new JButton("CANCEL");
		noButton.setActionCommand("actor");
		noButton.addActionListener(new CancelListener());
		
		actorNameField = new JTextField(20);
		JLabel nameLabel = new JLabel("Actor Name: ", JLabel.RIGHT);
		jplEnter.add(nameLabel);
		jplEnter.add(actorNameField);
		
		actorTitleField = new JTextField(20);
		JLabel titleLabel = new JLabel("Title: ", JLabel.RIGHT);
		jplEnter.add(titleLabel);
		jplEnter.add(actorTitleField);
		
		actorYearField = new JTextField(20);
		JLabel yearLabel = new JLabel("Year: ", JLabel.RIGHT);
		jplEnter.add(yearLabel);
		jplEnter.add(actorYearField);
		
		actorEpisodeTitleField = new JTextField(20);
		JLabel episodeTitleLabel = new JLabel("Episode Title: ", JLabel.RIGHT);
		jplEnter.add(episodeTitleLabel);
		jplEnter.add(actorEpisodeTitleField);
		
		actorEpisodeNumberField = new JTextField(20);
		JLabel episodeNumLabel = new JLabel("Episode Number: ", JLabel.RIGHT);
		jplEnter.add(episodeNumLabel);
		jplEnter.add(actorEpisodeNumberField);
		
		actorTypeField = new JTextField(20);
		JLabel type = new JLabel("Venue: ", JLabel.RIGHT);
		jplEnter.add(type);
		jplEnter.add(actorTypeField);
		
		actorRoleField = new JTextField(20);
		JLabel role = new JLabel("Role: ", JLabel.RIGHT);
		jplEnter.add(role);
		jplEnter.add(actorRoleField);
		
		actorArchiveFootageField = new JTextField(20);
		JLabel footage = new JLabel("Achive Footage: ", JLabel.RIGHT);
		jplEnter.add(footage);
		jplEnter.add(actorArchiveFootageField);
		
		actorCreditField = new JTextField(20);
		JLabel creditLabel = new JLabel("Credit: ", JLabel.RIGHT);
		jplEnter.add(creditLabel);
		jplEnter.add(actorCreditField);
		
		actorCharNameField = new JTextField(20);
		JLabel charNameLabel = new JLabel("Char Name: ", JLabel.RIGHT);
		jplEnter.add(charNameLabel);
		jplEnter.add(actorCharNameField);
		
		actorBillingOrderField = new JTextField(20);
		JLabel billingOrderLabel = new JLabel("Billing Order: ", JLabel.RIGHT);
		jplEnter.add(billingOrderLabel);
		jplEnter.add(actorBillingOrderField);
		
		jplEnter.add(addActorButton);
		jplEnter.add(noButton);
		
		frame.add(jplEnter);
		frame.setResizable(false);
		frame.pack();
		frameList.add(frame);
	}
	
	private void addDirectorFrame(JFrame frame){
		frame = new JFrame("Add Director");
		
		JPanel jplEnter = new JPanel(new GridLayout(8, 0, 5, 5));
		
		JButton noButton = new JButton("CANCEL");
		noButton.setActionCommand("director");
		noButton.addActionListener(new CancelListener());
		
		directorNameField = new JTextField(20);
		JLabel nameLabel = new JLabel("Director Name: ", JLabel.RIGHT);
		jplEnter.add(nameLabel);
		jplEnter.add(directorNameField);
		
		directorTitleField = new JTextField(20);
		JLabel titleLabel = new JLabel("Title: ", JLabel.RIGHT);
		jplEnter.add(titleLabel);
		jplEnter.add(directorTitleField);
		
		directorYearField = new JTextField(20);
		JLabel yearLabel = new JLabel("Year: ", JLabel.RIGHT);
		jplEnter.add(yearLabel);
		jplEnter.add(directorYearField);
		
		directorEpisodeTitleField = new JTextField(20);
		JLabel episodeTitleLabel = new JLabel("Episode Title: ", JLabel.RIGHT);
		jplEnter.add(episodeTitleLabel);
		jplEnter.add(directorEpisodeTitleField);
		
		directorEpisodeNumberField = new JTextField(20);
		JLabel episodeNumLabel = new JLabel("Episode Number: ", JLabel.RIGHT);
		jplEnter.add(episodeNumLabel);
		jplEnter.add(directorEpisodeNumberField);
		
		directorTypeField = new JTextField(20);
		JLabel type = new JLabel("Venue: ", JLabel.RIGHT);
		jplEnter.add(type);
		jplEnter.add(directorTypeField);
		
		directorCreditField = new JTextField(20);
		JLabel creditLabel = new JLabel("Credit: ", JLabel.RIGHT);
		jplEnter.add(creditLabel);
		jplEnter.add(directorCreditField);
		
		jplEnter.add(addDirectorButton);
		jplEnter.add(noButton);
		
		frame.add(jplEnter);
		frame.setResizable(false);
		frame.pack();
		frameList.add(frame);
	}
	
	private void addProducerFrame(JFrame frame){
		frame = new JFrame("Add Producer");
		
		JPanel jplEnter = new JPanel(new GridLayout(9, 0, 5, 5));
		
		JButton noButton = new JButton("CANCEL");
		noButton.setActionCommand("producer");
		noButton.addActionListener(new CancelListener());
		
		producerNameField = new JTextField(20);
		JLabel nameLabel = new JLabel("Producer Name: ", JLabel.RIGHT);
		jplEnter.add(nameLabel);
		jplEnter.add(producerNameField);
		
		producerTitleField = new JTextField(20);
		JLabel titleLabel = new JLabel("Title: ", JLabel.RIGHT);
		jplEnter.add(titleLabel);
		jplEnter.add(producerTitleField);
		
		producerYearField = new JTextField(20);
		JLabel yearLabel = new JLabel("Year: ", JLabel.RIGHT);
		jplEnter.add(yearLabel);
		jplEnter.add(producerYearField);
		
		producerEpisodeTitleField = new JTextField(20);
		JLabel episodeTitleLabel = new JLabel("Episode Title: ", JLabel.RIGHT);
		jplEnter.add(episodeTitleLabel);
		jplEnter.add(producerEpisodeTitleField);
		
		producerEpisodeNumberField = new JTextField(20);
		JLabel episodeNumLabel = new JLabel("Episode Number: ", JLabel.RIGHT);
		jplEnter.add(episodeNumLabel);
		jplEnter.add(producerEpisodeNumberField);
		
		producerTypeField = new JTextField(20);
		JLabel type = new JLabel("Venue: ", JLabel.RIGHT);
		jplEnter.add(type);
		jplEnter.add(producerTypeField);
		
		producerRoleField = new JTextField(20);
		JLabel roleLabel = new JLabel("Role: ", JLabel.RIGHT);
		jplEnter.add(roleLabel);
		jplEnter.add(producerRoleField);
		
		producerCreditField = new JTextField(20);
		JLabel creditLabel = new JLabel("Credit: ", JLabel.RIGHT);
		jplEnter.add(creditLabel);
		jplEnter.add(producerCreditField);
		
		jplEnter.add(addProducerButton);
		jplEnter.add(noButton);
		
		frame.add(jplEnter);
		frame.setResizable(false);
		frame.pack();
		frameList.add(frame);
	}
}
